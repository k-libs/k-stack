[{"name":"class Stack<T> : Collection<T> ","description":"io.foxcapades.lib.k.stack.Stack","location":"k-stack/io.foxcapades.lib.k.stack/-stack/index.html","searchKeys":["Stack","class Stack<T> : Collection<T> ","io.foxcapades.lib.k.stack.Stack"]},{"name":"fun <T> stackOf(items: Iterable<T>): Stack<T>","description":"io.foxcapades.lib.k.stack.stackOf","location":"k-stack/io.foxcapades.lib.k.stack/stack-of.html","searchKeys":["stackOf","fun <T> stackOf(items: Iterable<T>): Stack<T>","io.foxcapades.lib.k.stack.stackOf"]},{"name":"fun <T> stackOf(vararg items: T): Stack<T>","description":"io.foxcapades.lib.k.stack.stackOf","location":"k-stack/io.foxcapades.lib.k.stack/stack-of.html","searchKeys":["stackOf","fun <T> stackOf(vararg items: T): Stack<T>","io.foxcapades.lib.k.stack.stackOf"]},{"name":"fun Stack(initialCapacity: Int = 8, scaleFactor: Float = 1.5f, maxSize: Int = Int.MAX_VALUE)","description":"io.foxcapades.lib.k.stack.Stack.Stack","location":"k-stack/io.foxcapades.lib.k.stack/-stack/-stack.html","searchKeys":["Stack","fun Stack(initialCapacity: Int = 8, scaleFactor: Float = 1.5f, maxSize: Int = Int.MAX_VALUE)","io.foxcapades.lib.k.stack.Stack.Stack"]},{"name":"fun isNotEmpty(): Boolean","description":"io.foxcapades.lib.k.stack.Stack.isNotEmpty","location":"k-stack/io.foxcapades.lib.k.stack/-stack/is-not-empty.html","searchKeys":["isNotEmpty","fun isNotEmpty(): Boolean","io.foxcapades.lib.k.stack.Stack.isNotEmpty"]},{"name":"fun peek(): T","description":"io.foxcapades.lib.k.stack.Stack.peek","location":"k-stack/io.foxcapades.lib.k.stack/-stack/peek.html","searchKeys":["peek","fun peek(): T","io.foxcapades.lib.k.stack.Stack.peek"]},{"name":"fun pop(): T","description":"io.foxcapades.lib.k.stack.Stack.pop","location":"k-stack/io.foxcapades.lib.k.stack/-stack/pop.html","searchKeys":["pop","fun pop(): T","io.foxcapades.lib.k.stack.Stack.pop"]},{"name":"fun push(value: T)","description":"io.foxcapades.lib.k.stack.Stack.push","location":"k-stack/io.foxcapades.lib.k.stack/-stack/push.html","searchKeys":["push","fun push(value: T)","io.foxcapades.lib.k.stack.Stack.push"]},{"name":"open operator override fun contains(element: T): Boolean","description":"io.foxcapades.lib.k.stack.Stack.contains","location":"k-stack/io.foxcapades.lib.k.stack/-stack/contains.html","searchKeys":["contains","open operator override fun contains(element: T): Boolean","io.foxcapades.lib.k.stack.Stack.contains"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.foxcapades.lib.k.stack.Stack.equals","location":"k-stack/io.foxcapades.lib.k.stack/-stack/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.foxcapades.lib.k.stack.Stack.equals"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"io.foxcapades.lib.k.stack.Stack.iterator","location":"k-stack/io.foxcapades.lib.k.stack/-stack/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","io.foxcapades.lib.k.stack.Stack.iterator"]},{"name":"open override fun containsAll(elements: Collection<T>): Boolean","description":"io.foxcapades.lib.k.stack.Stack.containsAll","location":"k-stack/io.foxcapades.lib.k.stack/-stack/contains-all.html","searchKeys":["containsAll","open override fun containsAll(elements: Collection<T>): Boolean","io.foxcapades.lib.k.stack.Stack.containsAll"]},{"name":"open override fun hashCode(): Int","description":"io.foxcapades.lib.k.stack.Stack.hashCode","location":"k-stack/io.foxcapades.lib.k.stack/-stack/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.foxcapades.lib.k.stack.Stack.hashCode"]},{"name":"open override fun isEmpty(): Boolean","description":"io.foxcapades.lib.k.stack.Stack.isEmpty","location":"k-stack/io.foxcapades.lib.k.stack/-stack/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","io.foxcapades.lib.k.stack.Stack.isEmpty"]},{"name":"open override fun toString(): String","description":"io.foxcapades.lib.k.stack.Stack.toString","location":"k-stack/io.foxcapades.lib.k.stack/-stack/to-string.html","searchKeys":["toString","open override fun toString(): String","io.foxcapades.lib.k.stack.Stack.toString"]},{"name":"open override var size: Int = 0","description":"io.foxcapades.lib.k.stack.Stack.size","location":"k-stack/io.foxcapades.lib.k.stack/-stack/size.html","searchKeys":["size","open override var size: Int = 0","io.foxcapades.lib.k.stack.Stack.size"]},{"name":"val maxSize: Int","description":"io.foxcapades.lib.k.stack.Stack.maxSize","location":"k-stack/io.foxcapades.lib.k.stack/-stack/max-size.html","searchKeys":["maxSize","val maxSize: Int","io.foxcapades.lib.k.stack.Stack.maxSize"]},{"name":"var capacity: Int","description":"io.foxcapades.lib.k.stack.Stack.capacity","location":"k-stack/io.foxcapades.lib.k.stack/-stack/capacity.html","searchKeys":["capacity","var capacity: Int","io.foxcapades.lib.k.stack.Stack.capacity"]}]
